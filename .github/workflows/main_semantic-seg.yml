# Python on Linux Web App
# Build a Python project (using Django/Flask/Bottle frameworks) and deploy it to Azure as a Linux web app.
name: Deploy Python package to Azure Web App as a Linux web app.
on:
  [push]
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
# See this in-depth article on CI for Python applications: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
#
# 1. Set up the following secrets in your repository:
#   AZURE_CREDENTIALS_GITHUB_SECRET
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: 'semantic-seg'     # set this to your application's name
  WORKING_DIRECTORY: '.'        # set this to the path to your path of working directory inside github repository, defaults to the repository root
  PYTHON_VERSION: '3.11'        # set the version to use
  STARTUP_COMMAND: 'gunicorn --bind=0.0.0.0 --timeout 600 --chdir api app:app'           # set this to the startup command required to start the gunicorn server. default it is empty

jobs:
 build-and-deploy:
  runs-on: ubuntu-latest
  environment: 
    name: 'Production'
    url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  permissions:
      id-token: write #This is required for requesting the JWT
  steps:
  # checkout the repo 
  - uses: actions/checkout@v3
  # setup python
  - name: Setup Python
    uses: actions/setup-python@v1
    with:
     python-version: ${{ env.PYTHON_VERSION }}
  # install dependencies
  - name: python install
    working-directory: ${{ env.WORKING_DIRECTORY }}
    run: |
     sudo apt install python${{ env.PYTHON_VERSION }}-venv
     python -m venv --copies antenv
     source antenv/bin/activate
     pip install setuptools
     pip install -r requirements.txt
     
  - name: Run Az CLI script
    run: |
      cd model
      az storage blob download \
      --account-name projet-8 \
      --container-name kerasmodels  \
      --name /models/mini_unet_hd_complete.h5 \
      --file mini_unet_hd_complete.h5 \
      --account-key XyAXRxGbQEAfR+C2Yd7LLQ5E/7h2A3JiDaEehqMDBlXCE6biW7jOCOPTy7qI9GxoXqmCVA9XVbhl+AStepmviA== \
      --auth-mode key
      
  # Azure login
  # - uses: azure/login@v1
  #   with:
  #    creds: ${{ secrets.AZURE_CREDENTIALS_GITHUB_SECRET }}

  - uses: azure/login@v1
    with:
      client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E43DC73910B14BA993E781E385D02F87 }}
      tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EA2FBEE1882C415FBA3E096E55AC2FC2 }}
      subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F9E5A121ED67425097CDB096C309C153 }}

  - uses: azure/appservice-settings@v1
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     mask-inputs: false
     general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}' #'General configuration settings as Key Value pairs'
  # deploy web app
  - uses: azure/webapps-deploy@v2
    id: deploy-to-webapp
    with:
     app-name: ${{ env.AZURE_WEBAPP_NAME }}
     package: ${{ env.WORKING_DIRECTORY }}
     startup-command: ${{ env.STARTUP_COMMAND }}

  # Azure logout
  - name: logout
    run: |
     az logout